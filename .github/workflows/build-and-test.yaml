name: Build/Test

on:
  workflow_call:
    secrets:
      CHARMHUB_TOKEN:
        required: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Install dependencies
        run: sudo snap install --classic astral-uv
      - name: Run linters
        run: make lint

  unit-test:
    name: Unit tests
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Install dependencies
        run: sudo snap install --classic astral-uv
      - name: Run tests
        run: make unit

  lib-check:
    name: Check libraries
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Check libs
        uses: canonical/charming-actions/check-libraries@2.7.0
        with:
          credentials: "${{ secrets.CHARMHUB_TOKEN }}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"

  pack-charm:
    name: Build charm
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup LXD
        uses: canonical/setup-lxd@main

      - name: Install charmcraft
        run: sudo snap install charmcraft --classic

      - name: Cache wheels
        id: cache-wheels
        uses: actions/cache@v4
        with:
          path: /home/runner/snap/charmcraft/common/cache/charmcraft
          key: ${{ runner.os }}-wheel-cache-${{ hashFiles('./uv.lock') }}
          # If the above cache key doesn't match, it's because the uv.lock has changed.
          # Even so, pre-existing caches may still contain useful cached builds for some
          # portion of the dependencies, and restore-keys can partially match a cache.
          restore-keys: |
            ${{ runner.os }}-wheel-cache-

      - name: Pack charm
        run: charmcraft pack -v

      - name: Upload charm artifact
        uses: actions/upload-artifact@v4
        with:
          name: charm
          path: ./*.charm

  define-matrix:
    name: Define spread matrix
    runs-on: ubuntu-24.04
    outputs:
      suites: ${{ steps.suites.outputs.suites }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install charmcraft
        run: sudo snap install charmcraft --classic

      - name: Generate matrix list
        id: suites
        run: |
          list="$(charmcraft test --list lxd | sed "s|lxd:ubuntu-24.04:tests/spread/||g" | jq -r -ncR '[inputs | select(length>0)]')"
          echo "suites=$list"
          echo "suites=$list" >> $GITHUB_OUTPUT

  integration-test:
    name: Spread (${{ matrix.suite }})
    runs-on: ubuntu-24.04
    needs:
      - define-matrix
      - lib-check
      - lint
      - pack-charm
      - unit-test
    strategy:
      fail-fast: false
      matrix:
        suite: ${{ fromJSON(needs.define-matrix.outputs.suites) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download charm artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v4
        with:
          name: charm

      - name: Setup LXD
        uses: canonical/setup-lxd@main

      - name: Install charmcraft
        run: sudo snap install charmcraft --classic

      - name: Run integration tests
        run: |
          charmcraft test -v "lxd:ubuntu-24.04:tests/spread/${{ matrix.suite }}"
