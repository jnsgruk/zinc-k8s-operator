name: Build/Test

on:
  workflow_call:
    secrets:
      CHARMHUB_TOKEN:
        required: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          source $HOME/.cargo/env
          uv venv && source .venv/bin/activate
          uv pip install -r requirements-dev.txt
      - name: Run linters
        run: uv run tox -e lint

  unit-test:
    name: Unit tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          source $HOME/.cargo/env
          uv venv && source .venv/bin/activate
          uv pip install -r requirements-dev.txt
      - name: Run tests
        run: uv run tox -e unit

  lib-check:
    name: Check libraries
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 0
      - name: Check libs
        uses: canonical/charming-actions/check-libraries@46fe0c6d63324b5f74ce0e65d6ab47051953cc48 # 2.6.2
        with:
          credentials: "${{ secrets.CHARMHUB_TOKEN }}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"

  integration-test:
    name: Integration tests (microk8s)
    runs-on: ubuntu-22.04
    needs:
      - lint
      - unit-test
      - lib-check
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: 1.28-strict/stable
          juju-channel: 3.5/stable
          microk8s-group: snap_microk8s
          microk8s-addons: "hostpath-storage dns metallb:10.64.140.43-10.64.140.49"
      - name: Install dependencies
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          source $HOME/.cargo/env
          uv venv && source .venv/bin/activate
          uv pip install -r requirements-dev.txt
      - name: Run integration tests
        run: uv run tox -e integration
